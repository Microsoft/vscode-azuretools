steps:
- bash: |
    CHANGES=$(git remote set-branches --add origin master && git fetch && git --no-pager diff --name-only origin/master...HEAD)
    if [ -z "$(grep "${{ parameters.package }}/" <<< "$CHANGES")" ]; then
      echo "##vso[task.setvariable variable=skipPackage]1"
      echo "Skipping package"
    else
      echo "##vso[task.setvariable variable=skipPackage]"
      echo "Not skipping package"
    fi
  displayName: 'Check if package "${{ parameters.package }}" should be skipped.'
  condition: ne(variables['Build.SourceBranchName'], 'master')

- task: Npm@1
  displayName: 'npm install ${{ parameters.package }}'
  inputs:
    workingDir: '${{ parameters.package }}'
  condition: not(variables['skipPackage'])

- task: Npm@1
  displayName: 'Build ${{ parameters.package }}'
  inputs:
    workingDir: '${{ parameters.package }}'
    command: custom
    customCommand: run build
  condition: not(variables['skipPackage'])

- task: Npm@1
  displayName: 'Lint ${{ parameters.package }}'
  inputs:
    workingDir: '${{ parameters.package }}'
    command: custom
    customCommand: run lint
  condition: not(variables['skipPackage'])

- task: Npm@1
  displayName: 'Non-Linux: Test ${{ parameters.package }}'
  inputs:
    workingDir: '${{ parameters.package }}'
    command: custom
    customCommand: run test
  env:
    SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
    SERVICE_PRINCIPAL_SECRET: $(SERVICE_PRINCIPAL_SECRET)
    SERVICE_PRINCIPAL_DOMAIN: $(SERVICE_PRINCIPAL_DOMAIN)
  condition: and(not(variables['skipPackage']), ne(variables['Agent.OS'], 'Linux'))

- script: |
    export DISPLAY=:10
    npm run test
  displayName: 'Linux: Test ${{ parameters.package }}'
  workingDirectory: '${{ parameters.package }}'
  env:
    SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
    SERVICE_PRINCIPAL_SECRET: $(SERVICE_PRINCIPAL_SECRET)
    SERVICE_PRINCIPAL_DOMAIN: $(SERVICE_PRINCIPAL_DOMAIN)
  condition: and(not(variables['skipPackage']), eq(variables['Agent.OS'], 'Linux'))

- task: PublishTestResults@2
  displayName: 'Publish Test Results ${{ parameters.package }}'
  inputs:
    testResultsFiles: '${{ parameters.package }}/*-results.xml'
    testRunTitle: '$(Agent.OS) ${{ parameters.package }}'
  condition: succeededOrFailed()