/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const DeployResult: msRest.CompositeMapper = {
  serializedName: "DeployResult",
  type: {
    name: "Composite",
    className: "DeployResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      statusText: {
        serializedName: "status_text",
        type: {
          name: "String"
        }
      },
      authorEmail: {
        serializedName: "author_email",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "author",
        type: {
          name: "String"
        }
      },
      deployer: {
        serializedName: "deployer",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        type: {
          name: "String"
        }
      },
      receivedTime: {
        serializedName: "received_time",
        type: {
          name: "DateTime"
        }
      },
      startTime: {
        serializedName: "start_time",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "end_time",
        type: {
          name: "DateTime"
        }
      },
      lastSuccessEndTime: {
        serializedName: "last_success_end_time",
        type: {
          name: "DateTime"
        }
      },
      complete: {
        serializedName: "complete",
        type: {
          name: "Boolean"
        }
      },
      active: {
        serializedName: "active",
        type: {
          name: "Boolean"
        }
      },
      isTemp: {
        serializedName: "is_temp",
        type: {
          name: "Boolean"
        }
      },
      isReadonly: {
        serializedName: "is_readonly",
        type: {
          name: "Boolean"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      logUrl: {
        serializedName: "log_url",
        type: {
          name: "String"
        }
      },
      siteName: {
        serializedName: "site_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogEntry: msRest.CompositeMapper = {
  serializedName: "LogEntry",
  type: {
    name: "Composite",
    className: "LogEntry",
    modelProperties: {
      logTime: {
        serializedName: "log_time",
        type: {
          name: "DateTime"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Number"
        }
      },
      detailsUrl: {
        serializedName: "details_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionEnvelope: msRest.CompositeMapper = {
  serializedName: "FunctionEnvelope",
  type: {
    name: "Composite",
    className: "FunctionEnvelope",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      functionAppId: {
        serializedName: "function_app_id",
        type: {
          name: "String"
        }
      },
      scriptRootPathHref: {
        serializedName: "script_root_path_href",
        type: {
          name: "String"
        }
      },
      scriptHref: {
        serializedName: "script_href",
        type: {
          name: "String"
        }
      },
      configHref: {
        serializedName: "config_href",
        type: {
          name: "String"
        }
      },
      secretsFileHref: {
        serializedName: "secrets_file_href",
        type: {
          name: "String"
        }
      },
      href: {
        serializedName: "href",
        type: {
          name: "String"
        }
      },
      config: {
        serializedName: "config",
        type: {
          name: "Object"
        }
      },
      files: {
        serializedName: "files",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      testData: {
        serializedName: "test_data",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommandInput: msRest.CompositeMapper = {
  serializedName: "CommandInput",
  type: {
    name: "Composite",
    className: "CommandInput",
    modelProperties: {
      command: {
        serializedName: "command",
        type: {
          name: "String"
        }
      },
      dir: {
        serializedName: "dir",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommandResult: msRest.CompositeMapper = {
  serializedName: "CommandResult",
  type: {
    name: "Composite",
    className: "CommandResult",
    modelProperties: {
      output: {
        serializedName: "Output",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "Error",
        type: {
          name: "String"
        }
      },
      exitCode: {
        serializedName: "ExitCode",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DiagnosticsSettings: msRest.CompositeMapper = {
  serializedName: "DiagnosticsSettings",
  type: {
    name: "Composite",
    className: "DiagnosticsSettings",
    modelProperties: {
      azureDriveEnabled: {
        serializedName: "AzureDriveEnabled",
        type: {
          name: "Boolean"
        }
      },
      azureDriveTraceLevel: {
        serializedName: "AzureDriveTraceLevel",
        type: {
          name: "Number"
        }
      },
      azureTableEnabled: {
        serializedName: "AzureTableEnabled",
        type: {
          name: "Boolean"
        }
      },
      azureTableTraceLevel: {
        serializedName: "AzureTableTraceLevel",
        type: {
          name: "Number"
        }
      },
      azureBlobEnabled: {
        serializedName: "AzureBlobEnabled",
        type: {
          name: "Boolean"
        }
      },
      azureBlobTraceLevel: {
        serializedName: "AzureBlobTraceLevel",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FunctionSecrets: msRest.CompositeMapper = {
  serializedName: "FunctionSecrets",
  type: {
    name: "Composite",
    className: "FunctionSecrets",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      triggerUrl: {
        serializedName: "trigger_url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MasterKey: msRest.CompositeMapper = {
  serializedName: "MasterKey",
  type: {
    name: "Composite",
    className: "MasterKey",
    modelProperties: {
      masterKey: {
        serializedName: "masterKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepositoryInfo: msRest.CompositeMapper = {
  serializedName: "RepositoryInfo",
  type: {
    name: "Composite",
    className: "RepositoryInfo",
    modelProperties: {
      type: {
        serializedName: "Type",
        type: {
          name: "Number"
        }
      },
      gitUrl: {
        serializedName: "GitUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RuntimeInfo: msRest.CompositeMapper = {
  serializedName: "RuntimeInfo",
  type: {
    name: "Composite",
    className: "RuntimeInfo",
    modelProperties: {
      nodejs: {
        serializedName: "nodejs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      system: {
        serializedName: "System",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const SiteExtensionInfo: msRest.CompositeMapper = {
  serializedName: "SiteExtensionInfo",
  type: {
    name: "Composite",
    className: "SiteExtensionInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Number"
        }
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      extensionUrl: {
        serializedName: "extension_url",
        type: {
          name: "String"
        }
      },
      projectUrl: {
        serializedName: "project_url",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "icon_url",
        type: {
          name: "String"
        }
      },
      licenseUrl: {
        serializedName: "license_url",
        type: {
          name: "String"
        }
      },
      feedUrl: {
        serializedName: "feed_url",
        type: {
          name: "String"
        }
      },
      authors: {
        serializedName: "authors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      installerCommandLineParams: {
        serializedName: "installer_command_line_params",
        type: {
          name: "String"
        }
      },
      publishedDateTime: {
        serializedName: "published_date_time",
        type: {
          name: "DateTime"
        }
      },
      downloadCount: {
        serializedName: "download_count",
        type: {
          name: "Number"
        }
      },
      localIsLatestVersion: {
        serializedName: "local_is_latest_version",
        type: {
          name: "Boolean"
        }
      },
      localPath: {
        serializedName: "local_path",
        type: {
          name: "String"
        }
      },
      installedDateTime: {
        serializedName: "installed_date_time",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      comment: {
        serializedName: "comment",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebHook: msRest.CompositeMapper = {
  serializedName: "WebHook",
  type: {
    name: "Composite",
    className: "WebHook",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      event: {
        serializedName: "event",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      insecureSsl: {
        serializedName: "insecure_ssl",
        type: {
          name: "Boolean"
        }
      },
      lastStatus: {
        serializedName: "last_status",
        type: {
          name: "String"
        }
      },
      lastReason: {
        serializedName: "last_reason",
        type: {
          name: "String"
        }
      },
      lastDatetime: {
        serializedName: "last_datetime",
        type: {
          name: "DateTime"
        }
      },
      lastContext: {
        serializedName: "last_context",
        type: {
          name: "String"
        }
      }
    }
  }
};
